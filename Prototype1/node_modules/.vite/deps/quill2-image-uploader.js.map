{
  "version": 3,
  "sources": ["../../quill2-image-uploader/src/blots/image.js", "../../quill2-image-uploader/src/quill.imageUploader.js"],
  "sourcesContent": ["import Quill from 'quill';\r\n\r\nconst InlineBlot = Quill.import('blots/block');\r\n\r\nclass LoadingImage extends InlineBlot {\r\n  static create(src) {\r\n    const node = super.create(src);\r\n    if (src === true) return node;\r\n\r\n    const image = document.createElement('img');\r\n    image.setAttribute('src', src);\r\n    node.appendChild(image);\r\n    return node;\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    super.deleteAt(index, length);\r\n    this.cache = {};\r\n  }\r\n\r\n  static value(domNode) {\r\n    const { src, custom } = domNode.dataset;\r\n    return { src, custom };\r\n  }\r\n}\r\n\r\nLoadingImage.blotName = 'imageBlot';\r\nLoadingImage.className = 'quill-image-uploading';\r\nLoadingImage.tagName = 'span';\r\nQuill.register({ 'formats/imageBlot': LoadingImage });\r\n\r\nexport default LoadingImage;\r\n\r\n", "import LoadingImage from \"./blots/image.js\";\r\nimport \"./quill.imageUploader.css\";\r\nclass ImageUploader {\r\n  constructor(quill, options) {\r\n    this.quill = quill;\r\n    this.options = options;\r\n    this.range = null;\r\n\r\n    if (typeof this.options.upload !== \"function\") {\r\n      console.warn(\r\n        \"[Missing config] upload function that returns a promise is required\"\r\n      );\r\n    }\r\n\r\n    if (this.options.loadingClass) {\r\n      LoadingImage.className = this.options.loadingClass \r\n    }\r\n\r\n    const toolbar = this.quill.getModule(\"toolbar\");\r\n    toolbar.addHandler(\"image\", this.selectLocalImage.bind(this));\r\n\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handlePaste = this.handlePaste.bind(this);\r\n\r\n    this.quill.root.addEventListener(\"drop\", this.handleDrop, false);\r\n    this.quill.root.addEventListener(\"paste\", this.handlePaste, false);\r\n  }\r\n\r\n  selectLocalImage() {\r\n    this.range = this.quill.getSelection();\r\n    this.fileHolder = document.createElement(\"input\");\r\n    this.fileHolder.setAttribute(\"type\", \"file\");\r\n    this.fileHolder.setAttribute(\"accept\", \"image/*\");\r\n    this.fileHolder.setAttribute(\"style\", \"visibility:hidden\");\r\n\r\n    this.fileHolder.onchange = this.fileChanged.bind(this);\r\n\r\n    document.body.appendChild(this.fileHolder);\r\n\r\n    this.fileHolder.click();\r\n\r\n    window.requestAnimationFrame(() => {\r\n      document.body.removeChild(this.fileHolder);\r\n    });\r\n  }\r\n\r\n  handleDrop(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    if (\r\n      evt.dataTransfer &&\r\n      evt.dataTransfer.files &&\r\n      evt.dataTransfer.files.length\r\n    ) {\r\n      if (document.caretRangeFromPoint) {\r\n        const selection = document.getSelection();\r\n        const range = document.caretRangeFromPoint(evt.clientX, evt.clientY);\r\n        if (selection && range) {\r\n          selection.setBaseAndExtent(\r\n            range.startContainer,\r\n            range.startOffset,\r\n            range.startContainer,\r\n            range.startOffset\r\n          );\r\n        }\r\n      } else {\r\n        const selection = document.getSelection();\r\n        const range = document.caretPositionFromPoint(evt.clientX, evt.clientY);\r\n        if (selection && range) {\r\n          selection.setBaseAndExtent(\r\n            range.offsetNode,\r\n            range.offset,\r\n            range.offsetNode,\r\n            range.offset\r\n          );\r\n        }\r\n      }\r\n\r\n      this.range = this.quill.getSelection();\r\n      const file = evt.dataTransfer.files[0];\r\n\r\n      setTimeout(() => {\r\n        this.range = this.quill.getSelection();\r\n        this.readAndUploadFile(file);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  handlePaste(evt) {\r\n    const clipboard = evt.clipboardData || window.clipboardData;\r\n\r\n    // IE 11 is .files other browsers are .items\r\n    if (clipboard && (clipboard.items || clipboard.files)) {\r\n      const items = clipboard.items || clipboard.files;\r\n      const IMAGE_MIME_REGEX = /^image\\/(jpe?g|gif|png|svg|webp)$/i;\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (IMAGE_MIME_REGEX.test(items[i].type)) {\r\n          const file = items[i].getAsFile ? items[i].getAsFile() : items[i];\r\n\r\n          if (file) {\r\n            this.range = this.quill.getSelection();\r\n            evt.preventDefault();\r\n            setTimeout(() => {\r\n              this.range = this.quill.getSelection();\r\n              this.readAndUploadFile(file);\r\n            }, 0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  readAndUploadFile(file) {\r\n    let isUploadReject = false;\r\n\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.addEventListener(\r\n      \"load\",\r\n      () => {\r\n        if (!isUploadReject) {\r\n          const base64ImageSrc = fileReader.result;\r\n          this.insertBase64Image(base64ImageSrc);\r\n        }\r\n      },\r\n      false\r\n    );\r\n\r\n    if (file) {\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    this.options.upload(file).then(\r\n      (imageUrl) => {\r\n        this.insertToEditor(imageUrl);\r\n      },\r\n      (error) => {\r\n        isUploadReject = true;\r\n        this.removeBase64Image();\r\n        console.warn(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  fileChanged() {\r\n    const file = this.fileHolder.files[0];\r\n    this.readAndUploadFile(file);\r\n  }\r\n\r\n  insertBase64Image(url) {\r\n    const { range } = this;\r\n    this.quill.insertEmbed(\r\n      range.index,\r\n      LoadingImage.blotName,\r\n      `${url}`,\r\n      \"user\"\r\n    );\r\n  }\r\n\r\n  insertToEditor(url) {\r\n    const { range } = this;\r\n    // Delete the placeholder image\r\n    this.quill.deleteText(range.index, 3, \"user\");\r\n    // Insert the server saved image\r\n    this.quill.insertEmbed(range.index, \"image\", `${url}`, \"user\");\r\n\r\n    range.index++;\r\n    this.quill.setSelection(range, \"user\");\r\n  }\r\n\r\n  removeBase64Image() {\r\n    const { range } = this;\r\n    this.quill.deleteText(range.index, 3, \"user\");\r\n  }\r\n}\r\n\r\nwindow.ImageUploader = ImageUploader;\r\nexport default ImageUploader;\r\n"],
  "mappings": "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",
  "names": []
}
